########################################
#
#  Utilitários python para auxiliar na programação
#
########################################

dir() - usado para apresentar todos os atributos/propriedades e funções/métodos disponíveis para determinado
tipo de dado ou variável.

  ex:
  
      Se executarmos o comando abaixo:
      
        dir('eduardo') # repare que o tipo de dado é do tipo string

      Será mostrado:
      
      ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', 
       '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', 
       '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', 
       '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', 
       '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 
       'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 
       'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 
       'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 
       'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']


--------------------------------------------------------------------

help() - Usado para acessar o manual/documentação do Python sobre 
 um determinado tipo de dado ou objeto ( usando Idle-python ou um terminal ).

    ex1:
    
        Se pesquisarmos sobre um determinado atributo ou método de um determinado tipo de dado... ( a sintaxe é 
        sempre: help(tipoDeDado.atributo/método))
        
          help('eduardo'.lower)
        
        
        Será exibido a documentação sobre esse atributo ou método explicando como usá-lo:
        
            Help on built-in function lower:

            lower() method of builtins.str instance
            Return a copy of the string converted to lowercase.




Para olhar todos os  módulos já instalados no Python, utilize o método abaixo:

    help('modules')


Para olhar todas as palavras reservadas da linguagem python, digitamos:

    help('keywords')


Para olhar todos os simbolos utilizados pela linguagem python (ex: +, -, <, >=, !=, etc... ), digitamos:

    help('symbols')


Para acessarmos a documentação de um determinado objeto da linguagem python ( ex: int(), float(), string(), range(), tuple(), etc... ), digitamos:

    help('int') -> mostrará toda a estrutura (ATRIBUTOS e MÉTODOS) que compõe o método built-in: int()
    help('float)' -> mostrará toda a estrutura (ATRIBUTOS E MÉTODOS) que compôe o método built-in: float()

      OBS: O ACESSO A ESTRUTURA/DOCUMENTAÇÃO DE UM OBJETOS SERVE PARA QUALQUER OBJETO DEFINIDO NA LINGUAGEM PYTHON, BASTA INSERIR O NOME DO OBJETO (DENTRO DE ASPAS SIMPLES OU ASPAS DUPLAS), DENTRO DOS PARÊNTESES DO MÉTODO: help().

  CURIOSIDADE: O nome dos métodos built-in do python ( os métodos built-in do python, na verdade são classes ) SÃO
  ESCRITOS TUDO EM LETRA MINÚSCULA, isso significa que O NOME DESSAS CLASSE NÃO POSSUI O PRIMEIRO CARACTERE EM 
  MAIÚSCULO. Essa foi a forma que os deselvolvedores python encontraram de facilitar a identificação de uma classe 
  interna do python comparada á uma outra classe qualquer que criamos com a linguagem. É por isso que quando criamos 
  as nossas próprias classes, a convenção python nos diz que devemos sempre criar classes com a primeira letra em 
  maiúscula.


 
